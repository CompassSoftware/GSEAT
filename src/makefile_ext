#
# makefile 
#
# input file for 'make' build tool ( /usr/bin/make )
# to build solution for JUnit sample
#
# @author CS5666
# @version Fall 2019
#

HAMCREST_JAR = /usr/share/java/hamcrest/core-1.1.jar
JUNIT5_JAR = junit-platform-console-standalone-1.2.0.jar
JUNIT5_RUNNER = org.junit.platform.console.ConsoleLauncher
CKSTYLE_COMMAND = -jar /usr/local/checkstyle-5.5/checkstyle-5.5-all.jar
CKSTYLE_XML = cs_appstate_checks.xml
# Package for json.jar running in GitUser.java
JSON_JAR = json-lib-2.4-jdk15.jar
EZMORPH_JAR = ezmorph-1.0.6.jar
COMMONS_LOGGING_JAR = commons-logging-1.1.1.jar
COMMONS_LANG_JAR = commons-lang-2.6.jar
COMMONS_COLLECTION_JAR = commons-collections-3.2.1.jar
COMMONS_BEANUTILS_JAR = commons-beanutils-1.8.3.jar

default:
	@echo "usage: make target"
	@echo "targets available:"
	@echo "____ clean-all, clean-extract, clean-selection, clean-analysis"

# makefile syntax
#target-name: files dependent on (can use multiple lines by ending
#             lines with \
#<TAB char>Unix command-line command
#<TAB char>Unix command-line command
#etc.
#Essential that command lines start with single TAB character

run:
	make -f makefile_ext run_ext

run_ext:
	make -f makefile_ext compile_ext
	make -f makefile_ext test_ext

compile_ext:
	make -f makefile_ext compile_github
	make -f makefile_ext compile_extract

compile_github:
	make -f makefile_ext collab
	make -f makefile_ext commit
	make -f makefile_ext repo
	make -f makefile_ext issue
	make -f makefile_ext comment

compile_extract: extraction/Extraction.java extraction/ExtractionTest.java $(JSON_JAR) $(EZMORPH_JAR) $(COMMONS_LOGGING_JAR) $(COMMONS_LANG_JAR) $(COMMONS_COLLECTION_JAR) $(COMMONS_BEANUTILS_JAR) $(JUNIT5_JAR)
	javac -cp .:$(JSON_JAR):$(EZMORPH_JAR):$(COMMONS_LOGGING_JAR):$(COMMONS_LANG_JAR):$(COMMONS_COLLECTION_JAR):$(COMMONS_BEANUTILS_JAR) extraction/Extraction.java
	javac -cp .:$(JSON_JAR):$(EZMORPH_JAR):$(COMMONS_LOGGING_JAR):$(COMMONS_LANG_JAR):$(COMMONS_COLLECTION_JAR):$(COMMONS_BEANUTILS_JAR):$(JUNIT5_JAR) extraction/ExtractionTest.java

compile2: extraction/Extraction.java Extraction_Demo.java $(JSON_JAR) $(EZMORPH_JAR) $(COMMONS_LOGGING_JAR) $(COMMONS_LANG_JAR) $(COMMONS_COLLECTION_JAR) $(COMMONS_BEANUTILS_JAR)
	javac -cp .:$(JSON_JAR):$(EZMORPH_JAR):$(COMMONS_LOGGING_JAR):$(COMMONS_LANG_JAR):$(COMMONS_COLLECTION_JAR):$(COMMONS_BEANUTILS_JAR) extraction/Extraction.java Extraction_Demo.java
	java -cp .:$(JSON_JAR):$(EZMORPH_JAR):$(COMMONS_LOGGING_JAR):$(COMMONS_LANG_JAR):$(COMMONS_COLLECTION_JAR):$(COMMONS_BEANUTILS_JAR) Extraction_Demo

collab: github/Collaborator.java github/CollaboratorTest.java $(JSON_JAR) $(EZMORPH_JAR) $(COMMONS_LOGGING_JAR) $(COMMONS_LANG_JAR) $(COMMONS_COLLECTION_JAR) $(COMMONS_BEANUTILS_JAR) $(JUNIT5_JAR)
	javac github/Collaborator.java
	javac -cp .:$(JUNIT5_JAR) github/CollaboratorTest.java

commit: github/Commit.java github/CommitTest.java $(JUNIT5_JAR)
	javac github/Commit.java
	javac -cp .:$(JUNIT5_JAR) github/CommitTest.java

issue: github/Issue.java github/IssueTest.java $(JUNIT5_JAR)
	javac github/Issue.java
	javac -cp .:$(JUNIT5_JAR) github/IssueTest.java

comment: github/Comment.java github/CommentTest.java $(JUNIT5_JAR)
	javac github/Comment.java
	javac -cp .:$(JUNIT5_JAR) github/CommentTest.java

repo: github/Repository.java github/RepositoryTest.java $(JUNIT5_JAR)
	javac github/Repository.java
	javac -cp .:$(JUNIT5_JAR) github/RepositoryTest.java

clean_ext:
	rm -f *~
	rm -f *.class
	rm -f extraction/*.class
	rm -f github/*.class

test_ext: $(JUNIT5_JAR)
	java -cp .:$(JUNIT5_JAR) $(JUNIT5_RUNNER) --scan-class-path 

defchk_ext: extraction/*.java github/*.java $(CKSTYLE_XML)
	java $(CKSTYLE_COMMAND) -c $(CKSTYLE_XML) extraction/Extraction.java github/Collaborator.java github/Commit.java github/Issue.java github/Comment.java github/Repository.java

customchk_ext: extraction/*.java github/*.java style.xml
	java $(CKSTYLE_COMMAND) -c style.xml extraction/Extraction.java github/Collaborator.java github/Commit.java github/Issue.java github/Comment.java github/Repository.java

style.xml:
	@echo "Custom checkstyle needs a local style.xml file."
	@echo "Copy cs_appstate_checks.xml into style.xml and edit as needed."
	@echo "--------------------------------------------------------------"
